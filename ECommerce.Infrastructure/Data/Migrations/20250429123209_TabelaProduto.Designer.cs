// <auto-generated />
using ECommerce.Infrastructure.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250429123209_TabelaProduto")]
    partial class TabelaProduto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("ECommerce.Domain.Aggregates.Clientes.ClienteEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("INTEGER")
                        .HasColumnName("cpf");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT")
                        .HasColumnName("Nome");

                    b.Property<long>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("INTEGER")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("cliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Cpf = 11111111111L,
                            Endereco = "Rua Teste, 123",
                            Nome = "Cliente Admin",
                            Telefone = 0L
                        },
                        new
                        {
                            Id = 2L,
                            Cpf = 22222222222L,
                            Endereco = "Rua Teste, 124",
                            Nome = "Cliente Comum",
                            Telefone = 0L
                        });
                });

            modelBuilder.Entity("ECommerce.Domain.Aggregates.Produtos.ProdutoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("descricao");

                    b.Property<int>("Estoque")
                        .HasColumnType("INTEGER")
                        .HasColumnName("estoque");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT")
                        .HasColumnName("nome");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco");

                    b.HasKey("Id");

                    b.ToTable("produto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Descricao = "Descrição do Produto Inicial",
                            Estoque = 50,
                            Nome = "Produto Inicial",
                            Preco = 99.90m
                        },
                        new
                        {
                            Id = 2L,
                            Descricao = "Produto com estoque maior",
                            Estoque = 100,
                            Nome = "Produto Extra",
                            Preco = 49.90m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
